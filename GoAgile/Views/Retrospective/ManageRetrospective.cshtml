@using GoAgile.Models.Retrospective
@model RetrospectiveInitModel

@{
    ViewBag.Title = "ManageRetrospective";
}

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>
    <script src="~/Scripts/clipboard.min.js"></script>
    <link href="~/Content/GoAgileContent/modals.css" rel="stylesheet" />
    <link href="~/Content/GoAgileContent/text.css" rel="stylesheet" />
    <link href="~/Content/GoAgileContent/well.css" rel="stylesheet" />
    <link href="~/Content/GoAgileContent/sidebar.css" rel="stylesheet" />
    <script>
        $(function () {

            //  state: "waiting", "running", "presenting", "voting","finished"
            var state;

            // List of items
            // TODO: binary search and inser at position
            var itemIdList = [];

            // Enabled voting
            var enableVoting;

            // number of Votes
            var votes;

            // Page loaded
            $(document).ready(function () {


                var clipboard = new Clipboard('.btn');

                state = '@Model.State';
                votes = '@Model.Votes';
                enableVoting = '@Model.EnableVoting';

                if (enableVoting == "False")
                    $('#btn_startVoting').hide();
                $('#div_avaibleVotes').text("Remaining votes " + votes);

                $('#div_url').text('@Model.Url');

                switch (state) {
                    case "waiting":
                        modeWaiting();
                        break;
                    case "running":
                        modeRunning();
                        break;
                    case "presenting":
                        modePresenting();
                        break;
                    case "voting":
                        modeVoting();
                        break;
                    case "finished":
                        modeFinished();
                        break;
                }

                // Inicialize hub connection
                var retHub = $.connection.retrospectiveHub;

                // Retrospective started running
                retHub.client.startRunningMode = function () {
                    state = "running";
                    modeRunning();
                }

                // Retrospective started presenting
                retHub.client.startPresentingMode = function () {
                    state = "presenting";
                    modePresenting();
                }

                // Retrospective started voting
                retHub.client.startVotingMode = function () {
                    state = "voting";
                    modeVoting();
                }

                // Retrospective is finished
                retHub.client.retrospectiveFinished = function () {
                    state = "finished";
                    modeFinished();
                }

                // Disable Ready button
                retHub.client.readyMode = function () {
                    $('#btn_ready').prop('disabled', true);
                }

                // Recieve shared Item
                retHub.client.recieveSharedItem = function (data) {
                    var item = $.parseJSON(data);

                    addSharedItem(item.ItemGuid, item.Column, item.Autor, item.Text, item.Votes, item.CanVote, item.Color);
                }

                // Recieve all shared Items
                retHub.client.recieveAllSharedItemsMng = function (data) {
                    var item = $.parseJSON(data);
                    votes = item.RemainingVotes;
                    if (votes <= 0)
                        votes = 0;

                    $('#div_avaibleVotes').text("Remaining votes " + votes);

                    for (var i = 0; i < item.Items.length; i++)
                        addSharedItem(item.Items[i].ItemGuid, item.Items[i].Column, item.Items[i].Autor, item.Items[i].Text, item.Items[i].Votes, item.Items[i].CanVote, item.Items[i].Color);

                    if (item.Phase != state)
                        retHub.server.GetState();
                }

                // update Online Users
                retHub.client.recieveOnlineUsers = function (data) {
                    var items = $.parseJSON(data);
                    var i;

                    $('#list_users').empty();

                    for (i = 0; i < items.length; i++) {
                        if (items[i].Ready == true)
                        {
                            $('#list_users').append(
                                '<li><i class="glyphicon glyphicon-ok user' + items[i].Color + '"></i> ' + items[i].Name + '</li>'
                            );
                        }
                        else
                        {
                            $('#list_users').append(
                               '<li><i class="glyphicon glyphicon-user user' + items[i].Color + '"></i> ' + items[i].Name + '</li>'
                           );
                        }
                    }
                    $('#div_onlineUsers').text('Online Users: ' + i);
                };

                // Add Vote
                retHub.client.addVotesToSharedItem = function (data) {
                    var item = $.parseJSON(data);

                    sharedItemListId = item.Column;
                    sharedItemGuid = item.SharedItemGuid;
                    sharedItemVotes = item.VotesTotal;
                    sharedItemRemainingVotes = item.RemainnigVotes;
                    sharedItemEnableVoting = item.EnableThisItemVoting;

                    $('#div_avaibleVotes').text("Remaining votes " + sharedItemRemainingVotes);
                    if (sharedItemRemainingVotes <= 0)
                        $('.btn_shareVote').prop('disabled', true);

                    $('#' + sharedItemListId + ' li').each(function (index) {
                        if ($(this).attr('name') == sharedItemGuid)
                        {
                            if (sharedItemEnableVoting == false)
                                $(this).find('.btn_shareVote').prop('disabled', true);

                            var element = $(this).find('.sharedItem_votes');
                            if (element.attr('votes') < sharedItemVotes)
                            {
                                element.text('Votes: ' + sharedItemVotes);
                                element.attr('votes', sharedItemVotes);
                            }
                        }
                    });
                };

                // Connected to Hub
                $.connection.hub.start().done(function () {
                    retHub.server.logPm('@Model.GuidId');
                });

                // Share Item
                $(document).on("click", '.share', function () {
                    column = $(this).parent().parent().parent().attr('name');
                    text = $(this).parent().parent().find('.itemPending').val();

                    $(this).parent().parent().remove();

                    retHub.server.sendSharedItem(column, text);
                });

                // Delete Item from columns
                $(document).on('click', '.delete', function () {
                    $(this).parent().parent().remove();
                });

                // Voting
                $(document).on('click', '.btn_shareVote', function () {
                    var sharedIdGuid = $(this).parent().parent().parent().parent().parent().attr('name');
                    var sharedColumn =  $(this).parent().parent().parent().parent().parent().attr('column');

                    retHub.server.sharedItemVoted(sharedColumn, sharedIdGuid);
                });

                // I am Ready button
                $('#btn_ready').click(function () {
                    retHub.server.iamready();
                });

                // Start Retrospective running
                $('#btn_start_running').click(function () {
                    retHub.server.startRetrospectiveRunning();
                });

                // Start Retrospective presenting
                $('#btn_stop_running').click(function () {
                    retHub.server.startRetrospectivePresenting();
                });

                // Start Retrospective voting
                $('#btn_startVoting').click(function () {
                    retHub.server.startRetrospectiveVoting();
                });

                // Finish Retrospective
                $(document).on('click', '.finishRetrospective', function () {
                    retHub.server.retrospectiveComplete();
                });

                // Navigate to Retrospective History
                $('#btn_history').click(function () {
                    var url = '@Url.Action("RetrospectiveDetail", "Retrospective")' + "/" + '@Model.GuidId';
                    window.location.href = url;
                });

                // Navigate to Home page
                $('#btn_home').click(function () {
                    var url = '@Url.Action("GoAgile", "Home")';
                    window.location.href = url;
                });

                // Start column Add
                $('#btn_start_addItem').click(function () {
                    addListItem("list_start", "start");
                });

                // Continue column Add
                $('#btn_continue_addItem').click(function () {
                    addListItem("list_continue", "Continue");
                });

                // Stop column Add
                $('#btn_stop_addItem').click(function () {
                    addListItem("list_stop", "Stop");
                });

            });

            // Add list item to list
            function addListItem(list, placeholder) {
                var item =
                  $('<li class="list-group-item well clearfix listBlock">').append(
                      $('<textarea type="textarea" class="form-control itemPending" rows="3" placeholder="' + placeholder + '"></textarea>' +
                        '<div class="btn-group" role="group">' +
                        '<input type="button" class="btn btn-success share" disabled value="Share"/>' +
                        '<input type="button" class="btn btn-danger delete" value="Delete"/>' +
                        '</div>'
                ));
                $('#' + list).append(item);
                $(item).find('textarea').focus();
            };

            // Add shared Item to list
            function addSharedItem(itemGuid, column, autor, text, totalVotes, canVote, color) {
                var exist = false;
                var hidden = "hidden";
                var disabled = "";
                var listId;

                if (column == "Start")
                    listId = "list_start";
                else if (column == "Stop")
                    listId = "list_stop";
                else
                    listId = "list_continue";

                if (enableVoting == "True" && state == "voting" )
                    hidden = "";

                if (canVote == false || votes <= 0)
                    disabled = "disabled";

                for (var i = 0; i < itemIdList.length; i++) {
                    if (itemGuid == itemIdList[i])
                        exist = true;
                }

                if (exist == false) {
                    itemIdList.push(itemGuid);

                    $('#' + listId).prepend(
                        $('<li class="list-group-item well well-sm well-shared' + color + ' clearfix" name="' + itemGuid + '" column="' + listId + '">').append(
                            $('<div class="text-center">' + text + '<div>' +
                                '<div class="row sharedItem_votingPanel"' + hidden + '>' +
                                    '<div class="col-md-6 text-left">' +
                                        '<div class="sharedItem_votes" votes="' + totalVotes + '">Votes: ' + totalVotes + '</div>' +
                                    '</div>' +
                                    '<div class="col-md-6 text-right">' +
                                        '<input type="button" class="btn btn-xs btn-success btn_shareVote" ' + disabled + ' value="Vote"/>' +
                                    '</div>' +
                                '</div>'
                    )));
                }
            };

            // Disable list add (+) buttons
            function disableListButtons(state) {
                $('#btn_start_addItem').prop('disabled', state);
                $('#btn_continue_addItem').prop('disabled', state);
                $('#btn_stop_addItem').prop('disabled', state);
            };

            function modeWaiting() {
                disableListButtons(true);
                $('#manage_waiting').show();
            };

            function modeRunning() {
                $('#manage_waiting').hide();
                $('#manage_running').show();
                disableListButtons(false);
            };

            function modePresenting() {
                $('#manage_waiting').hide();
                $('#manage_running').hide();
                $('#manage_presenting').show();
                $('.itemPending').prop('disabled', true);
                disableListButtons(true);

                $('.share').prop('disabled', false);
            };

            function modeVoting() {
                $('.itemPending').hide();

                $('#manage_waiting').hide();
                $('#manage_running').hide();
                $('#manage_presenting').hide();
                $("#manage_voting").show();
                disableListButtons(true);
                $('.sharedItem_votingPanel').show();
            };

            function modeFinished() {
                $('.itemPending').hide();
                $('.btn_shareVote').hide();

                $('#manage_waiting').hide();
                $('#manage_running').hide();
                $('#manage_presenting').hide();
                $("#manage_voting").hide();
                $("#manage_finished").show();
                disableListButtons(true);
            };


        });
    </script>
}


 <!-- Page -->
<div class="container-fluid">      

           
    <!-- Online USers panel-->
    <div id="mySidenav" class="sidenav">
        <h5 id="div_onlineUsers"></h5>
        <ul class="list-group" id="list_users">
  
        </ul>
    </div> <!-- /Online USers panel -->
     
    <div id="main">
        <!-- Top well URL -->
        <div class="well">
            <div class="row text-center">
                <h3>Send this URL to your team</h3>
                <h4 id="div_url" class="break-word"></h4>
                <button class="btn btn-default" type="button" data-clipboard-target="#div_url">Copy</button>
            </div>
            <!-- Waiting State Manager -->
            <div class="row" hidden id="manage_waiting">
                <div class="col-md-6 text-center">

                </div>
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-right" role="group">
                        <button type="button" id="btn_start_running" class="btn btn-primary text-center">Start</button>
                    </div>
                </div>
            </div> <!-- /Waiting State Manager -->
            <!-- Running State Manager -->
            <div class="row" hidden id="manage_running">
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-left" role="group">
                        <button type="button" id="btn_ready" class="btn btn-primary text-center">I am Ready</button>
                    </div>
                </div>
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-right" role="group">
                        <button type="button" id="btn_stop_running" class="btn btn-success text-center">Share ideas</button>
                    </div>
                </div>
            </div> <!-- /Running State Manager -->
            <!-- Presenting State Manager -->
            <div class="row" hidden id="manage_presenting">

                <div class="col-md-6 text-center">

                </div>
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-right" role="group" aria-label="...">
                        <button type="button" id="btn_startVoting" class="btn btn-success text-center">Voting</button>
                        <button type="button" class="btn btn-danger text-center finishRetrospective">Finish</button>
                    </div>
                </div>
            </div> <!-- /Presenting State Manager -->
            <!-- Voting State Manager -->
            <div class="row" hidden id="manage_voting">
                <div class="col-md-6 text-center">
                    <div id="div_avaibleVotes"></div>
                </div>
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-right" role="group" aria-label="...">
                        <button type="button" class="btn btn-danger text-center finishRetrospective">Finish</button>
                    </div>
                </div>
            </div> <!-- /Voting State Manager -->
            <!-- Finished State Manager -->
            <div class="row" hidden id="manage_finished">
                <div class="col-md-6 text-center">

                </div>
                <div class="col-md-6 text-center">
                    <div class="btn-group btn-group-lg pull-right" role="group" aria-label="...">
                        <button type="button" id="btn_home" class="btn btn-primary text-center">Home</button>
                        <button type="button" id="btn_history" class="btn btn-primary text-center">See Detail</button>
                    </div>
                </div>
            </div> <!-- /Finished State Manager -->
        </div> <!-- /Top well URL -->
        <!-- Columns Start, Continue, Stop -->
        <div class="row">
            <div class="col-sm-4 text-center">
                <div class="title-marketing"><h3>Start</h3></div>
                <ul class="list-group" name="Start" id="list_start"></ul>
                <button type="button" id="btn_start_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
            </div>
            <div class="col-sm-4 text-center">
                <div class="title-marketing"><h3>Stop</h3></div>
                <ul class="list-group" name="Stop" id="list_stop"></ul>
                <button type="button" id="btn_stop_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
            </div>
            <div class="col-sm-4 text-center">
                <div class="title-marketing"><h3>Continue</h3></div>
                <ul class="list-group" name="Continue" id="list_continue"></ul>
                <button type="button" id="btn_continue_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
            </div>
        </div><!-- /Columns Start, Continue, Stop -->
    </div>      
</div>

