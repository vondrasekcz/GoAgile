@using GoAgile.Models.Retrospective
@model RetrospectiveInitModel
@{
    ViewBag.Title = "Retrospective";
}

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>    
    <link href="~/Content/GoAgileContent/modals.css" rel="stylesheet" />
    <link href="~/Content/GoAgileContent/text.css" rel="stylesheet" />
    <link href="~/Content/GoAgileContent/well.css" rel="stylesheet" />
    <script>
        // TODO: own script file

        $(function () {
            //  state: "waiting", "running", "presenting", "finished"
            var state;

            // Retrospective Guid
            var guidId;

            // User Name
            var user;

            // List of items
            // TODO: binary search and inser at position
            var itemIdList = [];


            // Page Loaded -> show login modal
            $(document).ready(function () {
                state = '@Model.State';
                guidId = '@Model.GuidId';
                if (state == "finished")
                    $('#modalFinished').modal('show');
                else
                    $('#modalLogin').modal('show');
            });


            var retHub = $.connection.retrospectiveHub;

            $.connection.hub.start().done(function () {
                if (state == "presenting" )
                    retHub.server.sendAllSharedItems(guidId);
            });

            // Login user
            $('#modalLogInButton').click(function () {
                retHub.server.loginUser($('#modalNickName').val(), $('#modalEmail').val(), guidId);
            });

            // Invalid input Login modal
            // TODO: valdiate message
            retHub.client.invalidLoginInput = function () {
                $('#testInValidInput').text("invalid input");
            };

            // User is logged
            retHub.client.userLogged = function (nickName) {
                retHub.server.logUser(nickName, guidId);

                user = nickName;
                switch (state) {
                    case "waiting":
                        disableListButtons(true);
                        $('#modalLogin').modal('hide');
                        $('#modalWaiting').modal('show');
                        break;
                    case "running":
                        disableListButtons(false);
                        $('#modalLogin').modal('hide');
                        break;
                    case "presenting":
                        disableListButtons(true);
                        $('.share').prop('disabled', false);
                        $('#modalLogin').modal('hide');
                        break;
                    case "finished":
                        $('#modalFinished').modal('show');
                        $('#modalLogin').modal('hide');
                        break;
                }
            };

            // Navigate to Retrospective History
            $('#btn_history').click(function () {
                var url = '@Url.Action("RetrospectiveDetail", "Retrospective")' + "/" + guidId;
                window.location.href = url;
            });

            // Navigate to Home page
            $('#btn_home').click(function () {
                var url = '@Url.Action("GoAgile", "Home")';
                window.location.href = url;
            });

            // Share Item
            $(document).on('click', '.share', function () {

                listId = $(this).parent().parent().parent().attr('id');
                column = $(this).parent().parent().parent().attr('name');
                text = $(this).parent().parent().find('.itemPending').val();

                $(this).parent().parent().remove();

                retHub.server.sendSharedItem(listId, column, text, user, guidId);
            });

            // Retrospective started running
            retHub.client.startRunningMode = function () {
                state = "running";
                $('#modalWaiting').modal('hide');
                disableListButtons(false);
            }

            // Retrospective started presenting
            retHub.client.startPresentingMode = function () {
                state = "presenting";
                $('#modalWaiting').modal('hide');
                $('.share').prop('disabled', false);
                $('.itemPending').prop('disabled', true);
                disableListButtons(true);
            }

            // Retrospective is finished
            retHub.client.retrospectiveFinished = function () {
                state = "finished";
                $('#modalFinished').modal('show');
            }

            // Recieve shared Item
            retHub.client.recieveSharedItem = function (item) {
                addSharedItem(item.ItemGuid, item.ListId, item.Column, item.Autor, item.Text);
            }

            // Recieve all shared Items
            retHub.client.recieveAllSharedItems = function (data) {
                var item = $.parseJSON(data);

                for (var i = 0; i < item.length; i++) {
                    addSharedItem(item[i].ItemGuid, item[i].ListId, item[i].Column, item[i].Autor, item[i].Text);
                }
            }


            // Start column Add
            $('#btn_start_addItem').click(function () {
                addListItem("list_start", "start");
            });

            // Continue column Add
            $('#btn_continue_addItem').click(function () {
                addListItem("list_continue", "Continue");
            });

            // Stop column Add
            $('#btn_stop_addItem').click(function () {
                addListItem("list_stop", "Stop");
            });

            // Add list pending item to list
            function addListItem(list, placeholder) {
                $('#' + list).append(
                   $('<li class="list-group-item well clearfix listBlock">').append(
                       $('<textarea type="textarea" class="form-control itemPending" rows="3" placeholder="' + placeholder + '"></textarea>' +
                         '<div class="btn-group" role="group">' +
                         '<input type="button" class="btn btn-success share" disabled value="Share"/>' +
                         '<input type="button" class="btn btn-danger delete" value="Delete"/>' +
                         '</div>'
                )));
            };

            // Add shared Item to list
            function addSharedItem(itemGuid, listId, column, autor, text) {
                var exist = false;

                for (var i = 0; i < itemIdList.length; i++) {
                    if (itemGuid == itemIdList[i])
                        exist = true;
                }

                if (exist == false) {
                    itemIdList.push(itemGuid);

                    $('#' + listId).prepend(
                        $('<li class="list-group-item well well-success  clearfix listBlock">').append(
                            $('<h4>' + column + '</h4><h5>by ' + autor + '</h5>' +
                              '<textarea type="textarea" class="form-control itemPending" disabled rows="3">' + text + '</textarea>'
                    )));
                }
            };

            // Delete Item from columns
            $(document).on('click', '.delete', function () {
                $(this).parent().parent().remove();
            });

            // Disable list add (+) buttons
            function disableListButtons(state) {
                $('#btn_start_addItem').prop('disabled', state);
                $('#btn_continue_addItem').prop('disabled', state);
                $('#btn_stop_addItem').prop('disabled', state);
            };


            retHub.client.updateUsersOnlineCount = function (count) {
                $('#usersCount').text(count);
            };

        });
    </script>
}




<!-- Modal LogIn-->
<div class="modal fade" id="modalLogin" hidden tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-header-primary text-center">
                <h1>Enter Retrospective</h1>
            </div>
            <div class="modal-body">
                <form id="logInForm">
                    <div class="form-group">
                        <label class="control-label">NickName:</label>
                        <input type="text" class="form-control" id="modalNickName" name="modalNickName" placeholder="Enter Nick Name">
                    </div>
                    <div class="form-group">
                        <label class="control-label">Email:</label>
                        <input type="text" class="form-control" id="modalEmail" name="modalEmail" placeholder="Enter Email">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <!-- remove after implementation of valdiation messages --> <div id="testInValidInput"></div>
                <button type="button" id="modalLogInButton" class="btn btn-primary text-center">Enter</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Modal Waiting-->
<div class="modal fade" id="modalWaiting" hidden tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-header-primary text-center">
                <h1>Waiting for the Start</h1>
            </div>
            <div class="modal-body">
                Please Wait until Retrospective starts.
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Modal Finished-->
<div class="modal fade" id="modalFinished" hidden tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-header-primary text-center">
                <h1>Retrospective is Done</h1>
            </div>
            <div class="modal-body">
                Go to home page or see retrospective data
            </div>
            <div class="modal-footer">
                <button type="button" id="btn_home" class="btn btn-primary text-center">Home</button>
                <button type="button" id="btn_history" class="btn btn-primary text-center">Data</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<br>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <h3>UsersOnline:</h3>
            <div id="usersCount"></div>
        </div>
        <!-- Columns Start, Continue, Stop -->
        <div class="col-md-10">
            <div class="row">
                <div class="col-sm-4 text-center">
                    <div class="title-marketing"><h3>Start</h3></div>
                    <ul class="list-group" name="Start" id="list_start"></ul>
                    <button type="button" id="btn_start_addItem" class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                </div>
                <div class="col-sm-4 text-center">
                    <div class="title-marketing"><h3>Stop</h3></div>
                    <ul class="list-group" name="Stop" id="list_stop"></ul>
                    <button type="button" id="btn_stop_addItem" class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                </div>
                <div class="col-sm-4 text-center">
                    <div class="title-marketing"><h3>Continue</h3></div>
                    <ul class="list-group" name="Continue" id="list_continue"></ul>
                    <button type="button" id="btn_continue_addItem" class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                </div>
            </div><!-- /Columns Start, Continue, Stop -->
        </div>
    </div>
</div>
<br>
